package dicegames;

import java.util.Scanner;


/**
 * This class models one pair of dices.
 *
 */
public class PairOfDices {
    /**
     * The first die in the pair.
     */
	private Die die1;
	/**
	 * The second die in the pair.
	 */
	private Die die2;
	/**
	 *  Count the number of times the rollBothDice() has been called.
	 */
	private int rollCount = 0;
	
	/*
	 * 
	 */
	private Scanner scan;
	
	/**
	 *  Attributes that keep track of the number of eyes a die has had,
	 *  and how many times.
	 *
	 */
	private int numberOfOnes = 0;
	private int numberOfTwos = 0;
	private int numberOfThrees = 0;
	private int numberOfFours = 0;
	private int numberOfFives = 0;
	private int numberOfSixes = 0;
	
	private int highestRoll;
	
	private int numberOfPairs;
	/**
	 * Constructor for objects of class PairOfDices
	 */
	public PairOfDices() {
		die1 = new Die(6);
		die2 = new Die(6);
		scan = new Scanner(System.in);
	}
	
	public void rollBothDie() {
		die1.roll();
		die2.roll();
		rollCount++;
		
		if(die1.getFaceValue() == die2.getFaceValue()) {
			numberOfPairs++;
		}
		
		switch(die1.getFaceValue()) {
		case 1 : numberOfOnes++;
			break;
		case 2: numberOfTwos++;
			break;
		case 3: numberOfThrees++;
			break;
		case 4: numberOfFours++;
			break;
		case 5: numberOfFives++;
			break;
		case 6: numberOfSixes++;
			break;
		default:
			break;
		
		}
		switch(die2.getFaceValue()) {
		case 1 : numberOfOnes++;
			break;
		case 2: numberOfTwos++;
			break;
		case 3: numberOfThrees++;
			break;
		case 4: numberOfFours++;
			break;
		case 5: numberOfFives++;
			break;
		case 6: numberOfSixes++;
			break;
		default:
			break;
		
		}
		if((die1.getFaceValue() + die2.getFaceValue()) > highestRoll) {
			highestRoll = die1.getFaceValue() + die2.getFaceValue();
		}
		
		
		
	}
	public int sumOfDice() {
		int sum;
		sum = die1.getFaceValue() + die2.getFaceValue();
		return sum;
	}
	public int getRollCount() {
		return rollCount;
	}
	public int getNumberOfSixes() {
		return numberOfSixes;
	}
	public void printDiceRollCount() {
		System.out.println("sixes: " +numberOfSixes);
		System.out.println("fives: " +numberOfFives);
		System.out.println("fours: "  +numberOfFours);
		System.out.println("threes: " +numberOfThrees);
		System.out.println("twos: " +numberOfTwos);
		System.out.println("ones: "+numberOfOnes);
		System.out.println("Your highest roll was: " + highestRoll);
		System.out.println("Number of times you rolled a pair: " + numberOfPairs);
		
	}
	public int getHighestRoll() {
		return highestRoll;
	}
	public void resetPairOfDice() {
		rollCount = 0;
		numberOfSixes = 0;
		numberOfFives = 0;
		numberOfFours = 0;
		numberOfThrees = 0;
		numberOfTwos = 0;
		numberOfOnes = 0;
		highestRoll = 0;
		
		die1.setFaceValue(1);
		die2.setFaceValue(1);
	}
	private void welcomeToGame() {
		System.out.println("Velkommen til spillet KAST terningerne");
	}

	/**
	 * Finishes the game and prints out the result.
	 */
	private void gameOver() {

		System.out.println("Tak for spillet du kastede " + rollCount + " "
				+ "gange.");
		System.out.println("Dine slag: ");
		printDiceRollCount();
		scan.close();
	}

	/**
	 * Take another turn in the game.
	 */
	private void takeTurn() {
		rollBothDie();
		int roll = sumOfDice();
		System.out.println("Du har kastet: " + roll);
	}

	/**
	 * Start the game loop.<br/>
	 * The game is finished when the player chooses to not roll the die anymore.
	 */
	public void startGame() {
		welcomeToGame();

		boolean finished = false;

		while (!finished) {
			System.out.println("Vil du kaste en terning? Angiv Ja eller Nej: ");
			String goOn = scan.nextLine();
			if (goOn.equalsIgnoreCase("Nej")) {
				finished = true;
			} else {
				takeTurn();
			}
		}
		gameOver();
	}

}
